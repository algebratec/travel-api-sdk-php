<?php
/**
 * FlightDetailedPrice
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Algebratec API
 *
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.23
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * FlightDetailedPrice Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FlightDetailedPrice implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FlightDetailedPrice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'adt_price' => '\Swagger\Client\Model\FlightPaxTypePrice',
'chd_price' => '\Swagger\Client\Model\FlightPaxTypePrice',
'inf_price' => '\Swagger\Client\Model\FlightPaxTypePrice',
'ins_price' => '\Swagger\Client\Model\FlightPaxTypePrice',
'src_price' => '\Swagger\Client\Model\FlightPaxTypePrice',
'yth_price' => '\Swagger\Client\Model\FlightPaxTypePrice',
'currency' => 'string',
'agency_fees' => 'int',
'agency_fees_per_pax' => 'int',
'agency_markup' => 'float',
'base_fare' => 'int',
'pax_number' => 'int',
'platform_fees' => 'int',
'platform_fees_per_pax' => 'int',
'platform_markup' => 'float',
'service_amount_per_pax' => 'int',
'service_fees' => 'int',
'tax' => 'int',
'total' => 'int',
'total_in_requested_currency' => 'int',
'total_platform' => 'float',
'total_provider' => 'float'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'adt_price' => null,
'chd_price' => null,
'inf_price' => null,
'ins_price' => null,
'src_price' => null,
'yth_price' => null,
'currency' => null,
'agency_fees' => null,
'agency_fees_per_pax' => null,
'agency_markup' => null,
'base_fare' => null,
'pax_number' => null,
'platform_fees' => null,
'platform_fees_per_pax' => null,
'platform_markup' => null,
'service_amount_per_pax' => null,
'service_fees' => null,
'tax' => null,
'total' => null,
'total_in_requested_currency' => null,
'total_platform' => null,
'total_provider' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'adt_price' => 'adt_price',
'chd_price' => 'chd_price',
'inf_price' => 'inf_price',
'ins_price' => 'ins_price',
'src_price' => 'src_price',
'yth_price' => 'yth_price',
'currency' => 'currency',
'agency_fees' => 'agency_fees',
'agency_fees_per_pax' => 'agency_fees_per_pax',
'agency_markup' => 'agency_markup',
'base_fare' => 'base_fare',
'pax_number' => 'pax_number',
'platform_fees' => 'platform_fees',
'platform_fees_per_pax' => 'platform_fees_per_pax',
'platform_markup' => 'platform_markup',
'service_amount_per_pax' => 'service_amount_per_pax',
'service_fees' => 'service_fees',
'tax' => 'tax',
'total' => 'total',
'total_in_requested_currency' => 'total_in_requested_currency',
'total_platform' => 'total_platform',
'total_provider' => 'total_provider'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'adt_price' => 'setAdtPrice',
'chd_price' => 'setChdPrice',
'inf_price' => 'setInfPrice',
'ins_price' => 'setInsPrice',
'src_price' => 'setSrcPrice',
'yth_price' => 'setYthPrice',
'currency' => 'setCurrency',
'agency_fees' => 'setAgencyFees',
'agency_fees_per_pax' => 'setAgencyFeesPerPax',
'agency_markup' => 'setAgencyMarkup',
'base_fare' => 'setBaseFare',
'pax_number' => 'setPaxNumber',
'platform_fees' => 'setPlatformFees',
'platform_fees_per_pax' => 'setPlatformFeesPerPax',
'platform_markup' => 'setPlatformMarkup',
'service_amount_per_pax' => 'setServiceAmountPerPax',
'service_fees' => 'setServiceFees',
'tax' => 'setTax',
'total' => 'setTotal',
'total_in_requested_currency' => 'setTotalInRequestedCurrency',
'total_platform' => 'setTotalPlatform',
'total_provider' => 'setTotalProvider'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'adt_price' => 'getAdtPrice',
'chd_price' => 'getChdPrice',
'inf_price' => 'getInfPrice',
'ins_price' => 'getInsPrice',
'src_price' => 'getSrcPrice',
'yth_price' => 'getYthPrice',
'currency' => 'getCurrency',
'agency_fees' => 'getAgencyFees',
'agency_fees_per_pax' => 'getAgencyFeesPerPax',
'agency_markup' => 'getAgencyMarkup',
'base_fare' => 'getBaseFare',
'pax_number' => 'getPaxNumber',
'platform_fees' => 'getPlatformFees',
'platform_fees_per_pax' => 'getPlatformFeesPerPax',
'platform_markup' => 'getPlatformMarkup',
'service_amount_per_pax' => 'getServiceAmountPerPax',
'service_fees' => 'getServiceFees',
'tax' => 'getTax',
'total' => 'getTotal',
'total_in_requested_currency' => 'getTotalInRequestedCurrency',
'total_platform' => 'getTotalPlatform',
'total_provider' => 'getTotalProvider'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['adt_price'] = isset($data['adt_price']) ? $data['adt_price'] : null;
        $this->container['chd_price'] = isset($data['chd_price']) ? $data['chd_price'] : null;
        $this->container['inf_price'] = isset($data['inf_price']) ? $data['inf_price'] : null;
        $this->container['ins_price'] = isset($data['ins_price']) ? $data['ins_price'] : null;
        $this->container['src_price'] = isset($data['src_price']) ? $data['src_price'] : null;
        $this->container['yth_price'] = isset($data['yth_price']) ? $data['yth_price'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['agency_fees'] = isset($data['agency_fees']) ? $data['agency_fees'] : null;
        $this->container['agency_fees_per_pax'] = isset($data['agency_fees_per_pax']) ? $data['agency_fees_per_pax'] : null;
        $this->container['agency_markup'] = isset($data['agency_markup']) ? $data['agency_markup'] : null;
        $this->container['base_fare'] = isset($data['base_fare']) ? $data['base_fare'] : null;
        $this->container['pax_number'] = isset($data['pax_number']) ? $data['pax_number'] : null;
        $this->container['platform_fees'] = isset($data['platform_fees']) ? $data['platform_fees'] : null;
        $this->container['platform_fees_per_pax'] = isset($data['platform_fees_per_pax']) ? $data['platform_fees_per_pax'] : null;
        $this->container['platform_markup'] = isset($data['platform_markup']) ? $data['platform_markup'] : null;
        $this->container['service_amount_per_pax'] = isset($data['service_amount_per_pax']) ? $data['service_amount_per_pax'] : null;
        $this->container['service_fees'] = isset($data['service_fees']) ? $data['service_fees'] : null;
        $this->container['tax'] = isset($data['tax']) ? $data['tax'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['total_in_requested_currency'] = isset($data['total_in_requested_currency']) ? $data['total_in_requested_currency'] : null;
        $this->container['total_platform'] = isset($data['total_platform']) ? $data['total_platform'] : null;
        $this->container['total_provider'] = isset($data['total_provider']) ? $data['total_provider'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets adt_price
     *
     * @return \Swagger\Client\Model\FlightPaxTypePrice
     */
    public function getAdtPrice()
    {
        return $this->container['adt_price'];
    }

    /**
     * Sets adt_price
     *
     * @param \Swagger\Client\Model\FlightPaxTypePrice $adt_price adt_price
     *
     * @return $this
     */
    public function setAdtPrice($adt_price)
    {
        $this->container['adt_price'] = $adt_price;

        return $this;
    }

    /**
     * Gets chd_price
     *
     * @return \Swagger\Client\Model\FlightPaxTypePrice
     */
    public function getChdPrice()
    {
        return $this->container['chd_price'];
    }

    /**
     * Sets chd_price
     *
     * @param \Swagger\Client\Model\FlightPaxTypePrice $chd_price chd_price
     *
     * @return $this
     */
    public function setChdPrice($chd_price)
    {
        $this->container['chd_price'] = $chd_price;

        return $this;
    }

    /**
     * Gets inf_price
     *
     * @return \Swagger\Client\Model\FlightPaxTypePrice
     */
    public function getInfPrice()
    {
        return $this->container['inf_price'];
    }

    /**
     * Sets inf_price
     *
     * @param \Swagger\Client\Model\FlightPaxTypePrice $inf_price inf_price
     *
     * @return $this
     */
    public function setInfPrice($inf_price)
    {
        $this->container['inf_price'] = $inf_price;

        return $this;
    }

    /**
     * Gets ins_price
     *
     * @return \Swagger\Client\Model\FlightPaxTypePrice
     */
    public function getInsPrice()
    {
        return $this->container['ins_price'];
    }

    /**
     * Sets ins_price
     *
     * @param \Swagger\Client\Model\FlightPaxTypePrice $ins_price ins_price
     *
     * @return $this
     */
    public function setInsPrice($ins_price)
    {
        $this->container['ins_price'] = $ins_price;

        return $this;
    }

    /**
     * Gets src_price
     *
     * @return \Swagger\Client\Model\FlightPaxTypePrice
     */
    public function getSrcPrice()
    {
        return $this->container['src_price'];
    }

    /**
     * Sets src_price
     *
     * @param \Swagger\Client\Model\FlightPaxTypePrice $src_price src_price
     *
     * @return $this
     */
    public function setSrcPrice($src_price)
    {
        $this->container['src_price'] = $src_price;

        return $this;
    }

    /**
     * Gets yth_price
     *
     * @return \Swagger\Client\Model\FlightPaxTypePrice
     */
    public function getYthPrice()
    {
        return $this->container['yth_price'];
    }

    /**
     * Sets yth_price
     *
     * @param \Swagger\Client\Model\FlightPaxTypePrice $yth_price yth_price
     *
     * @return $this
     */
    public function setYthPrice($yth_price)
    {
        $this->container['yth_price'] = $yth_price;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets agency_fees
     *
     * @return int
     */
    public function getAgencyFees()
    {
        return $this->container['agency_fees'];
    }

    /**
     * Sets agency_fees
     *
     * @param int $agency_fees agency_fees
     *
     * @return $this
     */
    public function setAgencyFees($agency_fees)
    {
        $this->container['agency_fees'] = $agency_fees;

        return $this;
    }

    /**
     * Gets agency_fees_per_pax
     *
     * @return int
     */
    public function getAgencyFeesPerPax()
    {
        return $this->container['agency_fees_per_pax'];
    }

    /**
     * Sets agency_fees_per_pax
     *
     * @param int $agency_fees_per_pax agency_fees_per_pax
     *
     * @return $this
     */
    public function setAgencyFeesPerPax($agency_fees_per_pax)
    {
        $this->container['agency_fees_per_pax'] = $agency_fees_per_pax;

        return $this;
    }

    /**
     * Gets agency_markup
     *
     * @return float
     */
    public function getAgencyMarkup()
    {
        return $this->container['agency_markup'];
    }

    /**
     * Sets agency_markup
     *
     * @param float $agency_markup agency_markup
     *
     * @return $this
     */
    public function setAgencyMarkup($agency_markup)
    {
        $this->container['agency_markup'] = $agency_markup;

        return $this;
    }

    /**
     * Gets base_fare
     *
     * @return int
     */
    public function getBaseFare()
    {
        return $this->container['base_fare'];
    }

    /**
     * Sets base_fare
     *
     * @param int $base_fare base_fare
     *
     * @return $this
     */
    public function setBaseFare($base_fare)
    {
        $this->container['base_fare'] = $base_fare;

        return $this;
    }

    /**
     * Gets pax_number
     *
     * @return int
     */
    public function getPaxNumber()
    {
        return $this->container['pax_number'];
    }

    /**
     * Sets pax_number
     *
     * @param int $pax_number pax_number
     *
     * @return $this
     */
    public function setPaxNumber($pax_number)
    {
        $this->container['pax_number'] = $pax_number;

        return $this;
    }

    /**
     * Gets platform_fees
     *
     * @return int
     */
    public function getPlatformFees()
    {
        return $this->container['platform_fees'];
    }

    /**
     * Sets platform_fees
     *
     * @param int $platform_fees platform_fees
     *
     * @return $this
     */
    public function setPlatformFees($platform_fees)
    {
        $this->container['platform_fees'] = $platform_fees;

        return $this;
    }

    /**
     * Gets platform_fees_per_pax
     *
     * @return int
     */
    public function getPlatformFeesPerPax()
    {
        return $this->container['platform_fees_per_pax'];
    }

    /**
     * Sets platform_fees_per_pax
     *
     * @param int $platform_fees_per_pax platform_fees_per_pax
     *
     * @return $this
     */
    public function setPlatformFeesPerPax($platform_fees_per_pax)
    {
        $this->container['platform_fees_per_pax'] = $platform_fees_per_pax;

        return $this;
    }

    /**
     * Gets platform_markup
     *
     * @return float
     */
    public function getPlatformMarkup()
    {
        return $this->container['platform_markup'];
    }

    /**
     * Sets platform_markup
     *
     * @param float $platform_markup platform_markup
     *
     * @return $this
     */
    public function setPlatformMarkup($platform_markup)
    {
        $this->container['platform_markup'] = $platform_markup;

        return $this;
    }

    /**
     * Gets service_amount_per_pax
     *
     * @return int
     */
    public function getServiceAmountPerPax()
    {
        return $this->container['service_amount_per_pax'];
    }

    /**
     * Sets service_amount_per_pax
     *
     * @param int $service_amount_per_pax service_amount_per_pax
     *
     * @return $this
     */
    public function setServiceAmountPerPax($service_amount_per_pax)
    {
        $this->container['service_amount_per_pax'] = $service_amount_per_pax;

        return $this;
    }

    /**
     * Gets service_fees
     *
     * @return int
     */
    public function getServiceFees()
    {
        return $this->container['service_fees'];
    }

    /**
     * Sets service_fees
     *
     * @param int $service_fees service_fees
     *
     * @return $this
     */
    public function setServiceFees($service_fees)
    {
        $this->container['service_fees'] = $service_fees;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return int
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param int $tax tax
     *
     * @return $this
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets total
     *
     * @return int
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     *
     * @param int $total total
     *
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets total_in_requested_currency
     *
     * @return int
     */
    public function getTotalInRequestedCurrency()
    {
        return $this->container['total_in_requested_currency'];
    }

    /**
     * Sets total_in_requested_currency
     *
     * @param int $total_in_requested_currency total_in_requested_currency
     *
     * @return $this
     */
    public function setTotalInRequestedCurrency($total_in_requested_currency)
    {
        $this->container['total_in_requested_currency'] = $total_in_requested_currency;

        return $this;
    }

    /**
     * Gets total_platform
     *
     * @return float
     */
    public function getTotalPlatform()
    {
        return $this->container['total_platform'];
    }

    /**
     * Sets total_platform
     *
     * @param float $total_platform total_platform
     *
     * @return $this
     */
    public function setTotalPlatform($total_platform)
    {
        $this->container['total_platform'] = $total_platform;

        return $this;
    }

    /**
     * Gets total_provider
     *
     * @return float
     */
    public function getTotalProvider()
    {
        return $this->container['total_provider'];
    }

    /**
     * Sets total_provider
     *
     * @param float $total_provider total_provider
     *
     * @return $this
     */
    public function setTotalProvider($total_provider)
    {
        $this->container['total_provider'] = $total_provider;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
